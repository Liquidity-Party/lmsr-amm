{"abi":[{"type":"function","name":"LMSR","inputs":[],"outputs":[{"name":"","type":"tuple","internalType":"struct LMSRStabilized.State","components":[{"name":"nAssets","type":"uint256","internalType":"uint256"},{"name":"kappa","type":"int128","internalType":"int128"},{"name":"qInternal","type":"int128[]","internalType":"int128[]"}]}],"stateMutability":"view"},{"type":"function","name":"allProtocolFeesOwed","inputs":[],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"allTokens","inputs":[],"outputs":[{"name":"","type":"address[]","internalType":"contract IERC20[]"}],"stateMutability":"view"},{"type":"function","name":"allowance","inputs":[{"name":"owner","type":"address","internalType":"address"},{"name":"spender","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"approve","inputs":[{"name":"spender","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"balanceOf","inputs":[{"name":"account","type":"address","internalType":"address"}],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"burn","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"lpAmount","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"unwrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"withdrawAmounts","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"nonpayable"},{"type":"function","name":"burnSwap","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"lpAmount","type":"uint256","internalType":"uint256"},{"name":"inputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"unwrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"amountOutUint","type":"uint256","internalType":"uint256"}],"stateMutability":"nonpayable"},{"type":"function","name":"collectProtocolFees","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"decimals","inputs":[],"outputs":[{"name":"","type":"uint8","internalType":"uint8"}],"stateMutability":"view"},{"type":"function","name":"denominators","inputs":[],"outputs":[{"name":"","type":"uint256[]","internalType":"uint256[]"}],"stateMutability":"view"},{"type":"function","name":"flashFeePpm","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"flashLoan","inputs":[{"name":"receiver","type":"address","internalType":"contract IERC3156FlashBorrower"},{"name":"token","type":"address","internalType":"address"},{"name":"amount","type":"uint256","internalType":"uint256"},{"name":"data","type":"bytes","internalType":"bytes"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"getToken","inputs":[{"name":"","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"address","internalType":"contract IERC20"}],"stateMutability":"view"},{"type":"function","name":"initialMint","inputs":[{"name":"receiver","type":"address","internalType":"address"},{"name":"lpTokens","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"lpMinted","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"kappa","inputs":[],"outputs":[{"name":"","type":"int128","internalType":"int128"}],"stateMutability":"view"},{"type":"function","name":"kill","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"killed","inputs":[],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"view"},{"type":"function","name":"mint","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"lpTokenAmount","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"lpMinted","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"name","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"numTokens","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"owner","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"protocolFeeAddress","inputs":[],"outputs":[{"name":"","type":"address","internalType":"address"}],"stateMutability":"view"},{"type":"function","name":"protocolFeePpm","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"renounceOwnership","inputs":[],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"swap","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"inputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"outputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"},{"name":"limitPrice","type":"int128","internalType":"int128"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"unwrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"swapAmounts","inputs":[{"name":"inputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"outputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"},{"name":"limitPrice","type":"int128","internalType":"int128"}],"outputs":[{"name":"amountIn","type":"uint256","internalType":"uint256"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"swapFeePpm","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"swapMint","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"inputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"maxAmountIn","type":"uint256","internalType":"uint256"},{"name":"deadline","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"lpMinted","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"swapToLimit","inputs":[{"name":"payer","type":"address","internalType":"address"},{"name":"receiver","type":"address","internalType":"address"},{"name":"inputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"outputTokenIndex","type":"uint256","internalType":"uint256"},{"name":"limitPrice","type":"int128","internalType":"int128"},{"name":"deadline","type":"uint256","internalType":"uint256"},{"name":"unwrap","type":"bool","internalType":"bool"}],"outputs":[{"name":"amountInUsed","type":"uint256","internalType":"uint256"},{"name":"amountOut","type":"uint256","internalType":"uint256"},{"name":"fee","type":"uint256","internalType":"uint256"}],"stateMutability":"payable"},{"type":"function","name":"symbol","inputs":[],"outputs":[{"name":"","type":"string","internalType":"string"}],"stateMutability":"view"},{"type":"function","name":"totalSupply","inputs":[],"outputs":[{"name":"","type":"uint256","internalType":"uint256"}],"stateMutability":"view"},{"type":"function","name":"transfer","inputs":[{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferFrom","inputs":[{"name":"from","type":"address","internalType":"address"},{"name":"to","type":"address","internalType":"address"},{"name":"value","type":"uint256","internalType":"uint256"}],"outputs":[{"name":"","type":"bool","internalType":"bool"}],"stateMutability":"nonpayable"},{"type":"function","name":"transferOwnership","inputs":[{"name":"newOwner","type":"address","internalType":"address"}],"outputs":[],"stateMutability":"nonpayable"},{"type":"function","name":"wrapperToken","inputs":[],"outputs":[{"name":"","type":"address","internalType":"contract NativeWrapper"}],"stateMutability":"view"},{"type":"event","name":"Approval","inputs":[{"name":"owner","type":"address","indexed":true,"internalType":"address"},{"name":"spender","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Burn","inputs":[{"name":"payer","type":"address","indexed":false,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"amounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"lpBurned","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"BurnSwap","inputs":[{"name":"payer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenOut","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpFee","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"protocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Flash","inputs":[{"name":"initiator","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"contract IERC3156FlashBorrower"},{"name":"token","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amount","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpFee","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"protocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Killed","inputs":[],"anonymous":false},{"type":"event","name":"Mint","inputs":[{"name":"payer","type":"address","indexed":false,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"amounts","type":"uint256[]","indexed":false,"internalType":"uint256[]"},{"name":"lpMinted","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"OwnershipTransferred","inputs":[{"name":"previousOwner","type":"address","indexed":true,"internalType":"address"},{"name":"newOwner","type":"address","indexed":true,"internalType":"address"}],"anonymous":false},{"type":"event","name":"ProtocolFeesCollected","inputs":[],"anonymous":false},{"type":"event","name":"Swap","inputs":[{"name":"payer","type":"address","indexed":false,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenIn","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"tokenOut","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpFee","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"protocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"SwapMint","inputs":[{"name":"payer","type":"address","indexed":true,"internalType":"address"},{"name":"receiver","type":"address","indexed":true,"internalType":"address"},{"name":"tokenIn","type":"address","indexed":true,"internalType":"contract IERC20"},{"name":"amountIn","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"amountOut","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"lpFee","type":"uint256","indexed":false,"internalType":"uint256"},{"name":"protocolFee","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"event","name":"Transfer","inputs":[{"name":"from","type":"address","indexed":true,"internalType":"address"},{"name":"to","type":"address","indexed":true,"internalType":"address"},{"name":"value","type":"uint256","indexed":false,"internalType":"uint256"}],"anonymous":false},{"type":"error","name":"OwnableInvalidOwner","inputs":[{"name":"owner","type":"address","internalType":"address"}]},{"type":"error","name":"OwnableUnauthorizedAccount","inputs":[{"name":"account","type":"address","internalType":"address"}]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{"LMSR()":"476e44b6","allProtocolFeesOwed()":"017504b6","allTokens()":"6ff97f1d","allowance(address,address)":"dd62ed3e","approve(address,uint256)":"095ea7b3","balanceOf(address)":"70a08231","burn(address,address,uint256,uint256,bool)":"6863f5bc","burnSwap(address,address,uint256,uint256,uint256,bool)":"491e7998","collectProtocolFees()":"a1af5b9a","decimals()":"313ce567","denominators()":"017cf661","flashFeePpm()":"31596a6a","flashLoan(address,address,uint256,bytes)":"5cffe9de","getToken(uint256)":"e4b50cb8","initialMint(address,uint256)":"6d8d0ff3","kappa()":"6bba3f2f","kill()":"41c0e1b5","killed()":"1f3a0e41","mint(address,address,uint256,uint256)":"b3f1c93d","name()":"06fdde03","numTokens()":"8e499bcf","owner()":"8da5cb5b","protocolFeeAddress()":"cce516b7","protocolFeePpm()":"6b4082d1","renounceOwnership()":"715018a6","swap(address,address,uint256,uint256,uint256,int128,uint256,bool)":"bdbfec99","swapAmounts(uint256,uint256,uint256,int128)":"d516b8c6","swapFeePpm()":"10ebae83","swapMint(address,address,uint256,uint256,uint256)":"cb717f3a","swapToLimit(address,address,uint256,uint256,int128,uint256,bool)":"79a68d53","symbol()":"95d89b41","totalSupply()":"18160ddd","transfer(address,uint256)":"a9059cbb","transferFrom(address,address,uint256)":"23b872dd","transferOwnership(address)":"f2fde38b","wrapperToken()":"0d246214"},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpBurned\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"BurnSwap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"initiator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"Flash\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"Killed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"ProtocolFeesCollected\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenOut\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"Swap\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"contract IERC20\",\"name\":\"tokenIn\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"lpFee\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"protocolFee\",\"type\":\"uint256\"}],\"name\":\"SwapMint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"LMSR\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nAssets\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"kappa\",\"type\":\"int128\"},{\"internalType\":\"int128[]\",\"name\":\"qInternal\",\"type\":\"int128[]\"}],\"internalType\":\"struct LMSRStabilized.State\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allProtocolFeesOwed\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"allTokens\",\"outputs\":[{\"internalType\":\"contract IERC20[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrap\",\"type\":\"bool\"}],\"name\":\"burn\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"withdrawAmounts\",\"type\":\"uint256[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrap\",\"type\":\"bool\"}],\"name\":\"burnSwap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountOutUint\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectProtocolFees\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"denominators\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"flashFeePpm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IERC3156FlashBorrower\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"flashLoan\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"getToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokens\",\"type\":\"uint256\"}],\"name\":\"initialMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kappa\",\"outputs\":[{\"internalType\":\"int128\",\"name\":\"\",\"type\":\"int128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"kill\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"killed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"lpTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"numTokens\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"protocolFeePpm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"limitPrice\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrap\",\"type\":\"bool\"}],\"name\":\"swap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"inputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"limitPrice\",\"type\":\"int128\"}],\"name\":\"swapAmounts\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"swapFeePpm\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxAmountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"}],\"name\":\"swapMint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"lpMinted\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"payer\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"receiver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"inputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"outputTokenIndex\",\"type\":\"uint256\"},{\"internalType\":\"int128\",\"name\":\"limitPrice\",\"type\":\"int128\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"unwrap\",\"type\":\"bool\"}],\"name\":\"swapToLimit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amountInUsed\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"wrapperToken\",\"outputs\":[{\"internalType\":\"contract NativeWrapper\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"The contract stores per-token uint \\\"_bases\\\" used to scale token units into the internal Q64.64 representation used by the LMSR library. Cached on-chain uint balances are kept to reduce balanceOf calls. The contract uses ceiling/floor rules described in function comments to bias rounding in favor of the pool (i.e., floor outputs to users, ceil inputs/fees where appropriate).\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"ProtocolFeesCollected()\":{\"details\":\"After collection, the protocolFee accounting array will be zeroed out.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"burn(address,address,uint256,uint256,bool)\":{\"details\":\"This function forwards the call to the burn implementation via delegatecall\",\"params\":{\"deadline\":\"timestamp after which the transaction will revert. Pass 0 to ignore.\",\"lpAmount\":\"amount of LP tokens to burn (proportional withdrawal)\",\"payer\":\"address that provides the LP tokens to burn\",\"receiver\":\"address that receives the withdrawn tokens\",\"unwrap\":\"if true and the native token is being withdrawn, it is unwraped and sent as native currency\"}},\"burnSwap(address,address,uint256,uint256,uint256,bool)\":{\"details\":\"The function burns LP tokens (authorization via allowance if needed), sends the single-asset payout and updates LMSR state.\",\"params\":{\"deadline\":\"optional deadline\",\"inputTokenIndex\":\"index of target asset to receive\",\"lpAmount\":\"amount of LP tokens to burn\",\"payer\":\"who burns LP tokens\",\"receiver\":\"who receives the single asset\"},\"returns\":{\"amountOutUint\":\"uint amount of asset inputTokenIndex sent to receiver\"}},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"denominators()\":{\"details\":\"denominators()[i] is the base for tokens[i]. These bases are chosen by deployer and must match token decimals.\"},\"flashLoan(address,address,uint256,bytes)\":{\"details\":\"Initiate a flash loan.\",\"params\":{\"amount\":\"The amount of tokens lent.\",\"data\":\"Arbitrary data structure, intended to contain user-defined parameters.\",\"receiver\":\"The receiver of the tokens in the loan, and the receiver of the callback.\",\"token\":\"The loan currency.\"}},\"getToken(uint256)\":{\"details\":\"tokens[i] corresponds to the i-th asset and maps to index i in the internal LMSR arrays.\"},\"initialMint(address,uint256)\":{\"details\":\"Assumes tokens have already been transferred to the pool prior to calling.      Can only be called when the pool is uninitialized (totalSupply() == 0 or _lmsr.nAssets == 0).\",\"params\":{\"lpTokens\":\"The number of LP tokens to issue for this mint. If 0, then the number of tokens returned will equal the LMSR internal q total\",\"receiver\":\"address that receives the LP tokens\"}},\"kappa()\":{\"details\":\"Pools are constructed with a \\u03ba value; this getter exposes the \\u03ba used by the pool.\"},\"mint(address,address,uint256,uint256)\":{\"details\":\"- For initial supply: assumes tokens have already been transferred to the pool prior to calling.      - For subsequent mints: payer must approve the required token amounts before calling.      Rounds follow the pool-favorable conventions documented in helpers (ceil inputs, floor outputs).\",\"params\":{\"deadline\":\"timestamp after which the transaction will revert. Pass 0 to ignore.\",\"lpTokenAmount\":\"desired amount of LP tokens to mint (ignored for initial deposit)\",\"payer\":\"address that provides the input tokens (ignored for initial deposit)\",\"receiver\":\"address that receives the LP tokens\"},\"returns\":{\"lpMinted\":\"the actual amount of lpToken minted\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"protocolFeePpm()\":{\"details\":\"This is the fraction (in ppm) of the pool-collected fees that are owed to the protocol.\"},\"swap(address,address,uint256,uint256,uint256,int128,uint256,bool)\":{\"details\":\"This function transfers the exact gross input (including fee) from payer and sends the computed output to receiver.      Non-standard tokens (fee-on-transfer, rebasers) are rejected via balance checks.\",\"params\":{\"deadline\":\"timestamp after which the transaction will revert. Pass 0 to ignore.\",\"inputTokenIndex\":\"index of input asset\",\"limitPrice\":\"maximum acceptable marginal price (64.64 fixed point). Pass 0 to ignore.\",\"maxAmountIn\":\"maximum amount of token inputTokenIndex (uint256) to transfer in (inclusive of fees)\",\"outputTokenIndex\":\"index of output asset\",\"payer\":\"address of the account that pays for the swap\",\"receiver\":\"address that will receive the output tokens\"},\"returns\":{\"amountIn\":\"actual input used (uint256), amountOut actual output sent (uint256), fee fee taken from the input (uint256)\"}},\"swapAmounts(uint256,uint256,uint256,int128)\":{\"params\":{\"inputTokenIndex\":\"index of input token\",\"limitPrice\":\"maximum acceptable marginal price (pass 0 to ignore)\",\"maxAmountIn\":\"maximum gross input allowed (inclusive of fee)\",\"outputTokenIndex\":\"index of output token\"},\"returns\":{\"amountIn\":\"gross input amount to transfer (includes fee), amountOut output amount user would receive, fee fee amount taken\"}},\"swapMint(address,address,uint256,uint256,uint256)\":{\"details\":\"swapMint executes as an exact-in planned swap followed by proportional scaling of qInternal.      The function emits SwapMint (gross, net, fee) and also emits Mint for LP issuance.\",\"params\":{\"deadline\":\"optional deadline\",\"inputTokenIndex\":\"index of the input token\",\"maxAmountIn\":\"maximum uint token input (inclusive of fee)\",\"payer\":\"who transfers the input token\",\"receiver\":\"who receives the minted LP tokens\"},\"returns\":{\"lpMinted\":\"actual LP minted (uint)\"}},\"swapToLimit(address,address,uint256,uint256,int128,uint256,bool)\":{\"details\":\"If balances prevent fully reaching the limit, the function caps and returns actuals.      The payer must transfer the exact gross input computed by the view.\",\"params\":{\"deadline\":\"timestamp after which the transaction will revert. Pass 0 to ignore.\",\"inputTokenIndex\":\"index of input asset\",\"limitPrice\":\"target marginal price to reach (must be > 0)\",\"outputTokenIndex\":\"index of output asset\",\"payer\":\"address of the account that pays for the swap\",\"receiver\":\"address that will receive the output tokens\"},\"returns\":{\"amountInUsed\":\"actual input used excluding fee (uint256), amountOut actual output sent (uint256), fee fee taken from the input (uint256)\"}},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"title\":\"PartyPool - LMSR-backed multi-asset pool with LP ERC20 token\",\"version\":1},\"userdoc\":{\"events\":{\"BurnSwap(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted instead of Burn when a burnSwap is executed.\"},\"ProtocolFeesCollected()\":{\"notice\":\"Emitted when protocol fees are collected from this pool.\"},\"SwapMint(address,address,address,uint256,uint256,uint256,uint256)\":{\"notice\":\"Emitted instead of Swap when a single-token swapMint is executed.\"}},\"kind\":\"user\",\"methods\":{\"allProtocolFeesOwed()\":{\"notice\":\"Protocol fee ledger accessor. Returns tokens owed (raw uint token units) from this pool as protocol fees         that have not yet been transferred out.\"},\"allTokens()\":{\"notice\":\"Returns the list of all token addresses in the pool (copy).\"},\"burn(address,address,uint256,uint256,bool)\":{\"notice\":\"Burn LP tokens and withdraw the proportional basket to receiver.\"},\"burnSwap(address,address,uint256,uint256,uint256,bool)\":{\"notice\":\"Burn LP tokens then swap the redeemed proportional basket into a single asset `inputTokenIndex` and send to receiver.\"},\"collectProtocolFees()\":{\"notice\":\"Callable by anyone, sends any owed protocol fees to the protocol fee address.\"},\"denominators()\":{\"notice\":\"Per-token uint base denominators used to convert uint token amounts <-> internal Q64.64 representation.\"},\"flashFeePpm()\":{\"notice\":\"Flash-loan fee in parts-per-million (ppm) applied to flash borrow amounts.\"},\"getToken(uint256)\":{\"notice\":\"Token addresses comprising the pool. Effectively immutable after construction.\"},\"initialMint(address,uint256)\":{\"notice\":\"Initial mint to set up pool for the first time.\"},\"kappa()\":{\"notice\":\"Liquidity parameter \\u03ba (Q64.64) used by the LMSR kernel: b = \\u03ba * S(q)\"},\"kill()\":{\"notice\":\"If a security problem is found, the vault owner may call this function to permanently disable swap and mint functionality, leaving only burns (withdrawals) working.\"},\"mint(address,address,uint256,uint256)\":{\"notice\":\"Proportional mint (or initial supply if first call).\"},\"numTokens()\":{\"notice\":\"Returns the number of tokens (n) in the pool.\"},\"protocolFeeAddress()\":{\"notice\":\"Address that will receive collected protocol tokens when collectProtocolFees() is called.\"},\"protocolFeePpm()\":{\"notice\":\"Protocol fee share (ppm) applied to fees collected by the pool (floored when accrued)\"},\"swap(address,address,uint256,uint256,uint256,int128,uint256,bool)\":{\"notice\":\"Swap input token inputTokenIndex -> token outputTokenIndex. Payer must approve token inputTokenIndex.\"},\"swapAmounts(uint256,uint256,uint256,int128)\":{\"notice\":\"External view to quote exact-in swap amounts (gross input incl. fee and output), matching swap() computations\"},\"swapFeePpm()\":{\"notice\":\"Per-swap fee in parts-per-million (ppm). Fee is taken from input amounts before LMSR computations.\"},\"swapMint(address,address,uint256,uint256,uint256)\":{\"notice\":\"Single-token mint: deposit a single token, charge swap-LMSR cost, and mint LP.\"},\"swapToLimit(address,address,uint256,uint256,int128,uint256,bool)\":{\"notice\":\"Swap up to the price limit; computes max input to reach limit then performs swap.\"},\"wrapperToken()\":{\"notice\":\"Token contract used for wrapping native currency\"}},\"notice\":\"A multi-asset liquidity pool backed by the LMSRStabilized pricing model. The pool issues an ERC20 LP token representing proportional ownership. It supports: - Proportional minting and burning of LP _tokens, - Single-token mint (swapMint) and single-asset withdrawal (burnSwap), - Exact-input swaps and swaps-to-price-limits, - Flash loans via a callback interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/IPartyPool.sol\":\"IPartyPool\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":100000000},\"remappings\":[\":@abdk/=lib/abdk-libraries-solidity/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":abdk-libraries-solidity/=lib/abdk-libraries-solidity/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"],\"viaIR\":true},\"sources\":{\"lib/abdk-libraries-solidity/ABDKMath64x64.sol\":{\"keccak256\":\"0x1364fdc24192b982f647c7fc68dcb2f6fc1b5e201843e773144bd23a76cb3b97\",\"license\":\"BSD-4-Clause\",\"urls\":[\"bzz-raw://490712cc07db32f274899b17aade9c975f06010848c21500b8a5ead6898e09c7\",\"dweb:/ipfs/QmZMPKjDgwCFSGdLWJW6g5E7hDLByA9hNjXzAwJ4GKTZvN\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol\":{\"keccak256\":\"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd\",\"dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303\",\"dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e\",\"dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR\"]},\"src/IOwnable.sol\":{\"keccak256\":\"0x7462267790c0d2312be1cbce077e5565aa86dac0789718c87ad0948174ecb990\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7eca10ffa6a7985d11eb476a351b1c09701056b0bdf8146612173bb19764e3f1\",\"dweb:/ipfs/QmTPF85yFSL3jDt2atZDLT4RV3zs8ch8P3G7YzCUiU8gR9\"]},\"src/IPartyPool.sol\":{\"keccak256\":\"0xc10e413b1fcbf0ff75fe49d1a9c5263e321c4ccb72bc3bbc9daff2d8b7570d10\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://1ca7470c68d7a92f64ada00053b8a097f9240e6abc3209796dbc1ab0bf47f7aa\",\"dweb:/ipfs/Qmf3gXCVHPyQ9dQvdSQLVV3Yr476n4QJBa327oFwDV7mnE\"]},\"src/LMSRStabilized.sol\":{\"keccak256\":\"0xfbb5d611a105095a9ccc71f859908eec12ed7df4573a787e130bbaf9fbaa7935\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://4f37e539fdbedd38488f5c5f0c8a4f579693e8de1ca546b60c580d4d0e12b28b\",\"dweb:/ipfs/QmR6VvQs54XKH67DyWrWdLBf2n6XTYnTjRniY4CFihZAVN\"]},\"src/NativeWrapper.sol\":{\"keccak256\":\"0xca6c8828bbc6e45737dd881d9bcc4077bc058ddcc118189ed49b4ee331ab5579\",\"license\":\"UNLICENSED\",\"urls\":[\"bzz-raw://ddb1604ad481e4c58d0f216c8b262515cb735c03fd93a5b36c4e69c81df5a238\",\"dweb:/ipfs/QmPhSjWsZksacUW8hR7tXNVRScoMSv6TQArbJBHcXJiRVB\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.30+commit.73712a01"},"language":"Solidity","output":{"abi":[{"inputs":[{"internalType":"address","name":"owner","type":"address"}],"type":"error","name":"OwnableInvalidOwner"},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"type":"error","name":"OwnableUnauthorizedAccount"},{"inputs":[{"internalType":"address","name":"owner","type":"address","indexed":true},{"internalType":"address","name":"spender","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Approval","anonymous":false},{"inputs":[{"internalType":"address","name":"payer","type":"address","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256[]","name":"amounts","type":"uint256[]","indexed":false},{"internalType":"uint256","name":"lpBurned","type":"uint256","indexed":false}],"type":"event","name":"Burn","anonymous":false},{"inputs":[{"internalType":"address","name":"payer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenOut","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"uint256","name":"lpFee","type":"uint256","indexed":false},{"internalType":"uint256","name":"protocolFee","type":"uint256","indexed":false}],"type":"event","name":"BurnSwap","anonymous":false},{"inputs":[{"internalType":"address","name":"initiator","type":"address","indexed":true},{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address","indexed":true},{"internalType":"contract IERC20","name":"token","type":"address","indexed":true},{"internalType":"uint256","name":"amount","type":"uint256","indexed":false},{"internalType":"uint256","name":"lpFee","type":"uint256","indexed":false},{"internalType":"uint256","name":"protocolFee","type":"uint256","indexed":false}],"type":"event","name":"Flash","anonymous":false},{"inputs":[],"type":"event","name":"Killed","anonymous":false},{"inputs":[{"internalType":"address","name":"payer","type":"address","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"uint256[]","name":"amounts","type":"uint256[]","indexed":false},{"internalType":"uint256","name":"lpMinted","type":"uint256","indexed":false}],"type":"event","name":"Mint","anonymous":false},{"inputs":[{"internalType":"address","name":"previousOwner","type":"address","indexed":true},{"internalType":"address","name":"newOwner","type":"address","indexed":true}],"type":"event","name":"OwnershipTransferred","anonymous":false},{"inputs":[],"type":"event","name":"ProtocolFeesCollected","anonymous":false},{"inputs":[{"internalType":"address","name":"payer","type":"address","indexed":false},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenIn","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenOut","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"uint256","name":"lpFee","type":"uint256","indexed":false},{"internalType":"uint256","name":"protocolFee","type":"uint256","indexed":false}],"type":"event","name":"Swap","anonymous":false},{"inputs":[{"internalType":"address","name":"payer","type":"address","indexed":true},{"internalType":"address","name":"receiver","type":"address","indexed":true},{"internalType":"contract IERC20","name":"tokenIn","type":"address","indexed":true},{"internalType":"uint256","name":"amountIn","type":"uint256","indexed":false},{"internalType":"uint256","name":"amountOut","type":"uint256","indexed":false},{"internalType":"uint256","name":"lpFee","type":"uint256","indexed":false},{"internalType":"uint256","name":"protocolFee","type":"uint256","indexed":false}],"type":"event","name":"SwapMint","anonymous":false},{"inputs":[{"internalType":"address","name":"from","type":"address","indexed":true},{"internalType":"address","name":"to","type":"address","indexed":true},{"internalType":"uint256","name":"value","type":"uint256","indexed":false}],"type":"event","name":"Transfer","anonymous":false},{"inputs":[],"stateMutability":"view","type":"function","name":"LMSR","outputs":[{"internalType":"struct LMSRStabilized.State","name":"","type":"tuple","components":[{"internalType":"uint256","name":"nAssets","type":"uint256"},{"internalType":"int128","name":"kappa","type":"int128"},{"internalType":"int128[]","name":"qInternal","type":"int128[]"}]}]},{"inputs":[],"stateMutability":"view","type":"function","name":"allProtocolFeesOwed","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"allTokens","outputs":[{"internalType":"contract IERC20[]","name":"","type":"address[]"}]},{"inputs":[{"internalType":"address","name":"owner","type":"address"},{"internalType":"address","name":"spender","type":"address"}],"stateMutability":"view","type":"function","name":"allowance","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"spender","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"approve","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"account","type":"address"}],"stateMutability":"view","type":"function","name":"balanceOf","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"lpAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"unwrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"burn","outputs":[{"internalType":"uint256[]","name":"withdrawAmounts","type":"uint256[]"}]},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"lpAmount","type":"uint256"},{"internalType":"uint256","name":"inputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"unwrap","type":"bool"}],"stateMutability":"nonpayable","type":"function","name":"burnSwap","outputs":[{"internalType":"uint256","name":"amountOutUint","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"collectProtocolFees"},{"inputs":[],"stateMutability":"view","type":"function","name":"decimals","outputs":[{"internalType":"uint8","name":"","type":"uint8"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"denominators","outputs":[{"internalType":"uint256[]","name":"","type":"uint256[]"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"flashFeePpm","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"contract IERC3156FlashBorrower","name":"receiver","type":"address"},{"internalType":"address","name":"token","type":"address"},{"internalType":"uint256","name":"amount","type":"uint256"},{"internalType":"bytes","name":"data","type":"bytes"}],"stateMutability":"nonpayable","type":"function","name":"flashLoan","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"uint256","name":"","type":"uint256"}],"stateMutability":"view","type":"function","name":"getToken","outputs":[{"internalType":"contract IERC20","name":"","type":"address"}]},{"inputs":[{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"lpTokens","type":"uint256"}],"stateMutability":"payable","type":"function","name":"initialMint","outputs":[{"internalType":"uint256","name":"lpMinted","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"kappa","outputs":[{"internalType":"int128","name":"","type":"int128"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"kill"},{"inputs":[],"stateMutability":"view","type":"function","name":"killed","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"lpTokenAmount","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"mint","outputs":[{"internalType":"uint256","name":"lpMinted","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"name","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"numTokens","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"protocolFeeAddress","outputs":[{"internalType":"address","name":"","type":"address"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"protocolFeePpm","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[],"stateMutability":"nonpayable","type":"function","name":"renounceOwnership"},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"inputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"outputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"int128","name":"limitPrice","type":"int128"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"unwrap","type":"bool"}],"stateMutability":"payable","type":"function","name":"swap","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[{"internalType":"uint256","name":"inputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"outputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"int128","name":"limitPrice","type":"int128"}],"stateMutability":"view","type":"function","name":"swapAmounts","outputs":[{"internalType":"uint256","name":"amountIn","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"swapFeePpm","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"inputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"maxAmountIn","type":"uint256"},{"internalType":"uint256","name":"deadline","type":"uint256"}],"stateMutability":"payable","type":"function","name":"swapMint","outputs":[{"internalType":"uint256","name":"lpMinted","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"payer","type":"address"},{"internalType":"address","name":"receiver","type":"address"},{"internalType":"uint256","name":"inputTokenIndex","type":"uint256"},{"internalType":"uint256","name":"outputTokenIndex","type":"uint256"},{"internalType":"int128","name":"limitPrice","type":"int128"},{"internalType":"uint256","name":"deadline","type":"uint256"},{"internalType":"bool","name":"unwrap","type":"bool"}],"stateMutability":"payable","type":"function","name":"swapToLimit","outputs":[{"internalType":"uint256","name":"amountInUsed","type":"uint256"},{"internalType":"uint256","name":"amountOut","type":"uint256"},{"internalType":"uint256","name":"fee","type":"uint256"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"symbol","outputs":[{"internalType":"string","name":"","type":"string"}]},{"inputs":[],"stateMutability":"view","type":"function","name":"totalSupply","outputs":[{"internalType":"uint256","name":"","type":"uint256"}]},{"inputs":[{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transfer","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"from","type":"address"},{"internalType":"address","name":"to","type":"address"},{"internalType":"uint256","name":"value","type":"uint256"}],"stateMutability":"nonpayable","type":"function","name":"transferFrom","outputs":[{"internalType":"bool","name":"","type":"bool"}]},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"stateMutability":"nonpayable","type":"function","name":"transferOwnership"},{"inputs":[],"stateMutability":"view","type":"function","name":"wrapperToken","outputs":[{"internalType":"contract NativeWrapper","name":"","type":"address"}]}],"devdoc":{"kind":"dev","methods":{"allowance(address,address)":{"details":"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."},"approve(address,uint256)":{"details":"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."},"balanceOf(address)":{"details":"Returns the value of tokens owned by `account`."},"burn(address,address,uint256,uint256,bool)":{"details":"This function forwards the call to the burn implementation via delegatecall","params":{"deadline":"timestamp after which the transaction will revert. Pass 0 to ignore.","lpAmount":"amount of LP tokens to burn (proportional withdrawal)","payer":"address that provides the LP tokens to burn","receiver":"address that receives the withdrawn tokens","unwrap":"if true and the native token is being withdrawn, it is unwraped and sent as native currency"}},"burnSwap(address,address,uint256,uint256,uint256,bool)":{"details":"The function burns LP tokens (authorization via allowance if needed), sends the single-asset payout and updates LMSR state.","params":{"deadline":"optional deadline","inputTokenIndex":"index of target asset to receive","lpAmount":"amount of LP tokens to burn","payer":"who burns LP tokens","receiver":"who receives the single asset"},"returns":{"amountOutUint":"uint amount of asset inputTokenIndex sent to receiver"}},"decimals()":{"details":"Returns the decimals places of the token."},"denominators()":{"details":"denominators()[i] is the base for tokens[i]. These bases are chosen by deployer and must match token decimals."},"flashLoan(address,address,uint256,bytes)":{"details":"Initiate a flash loan.","params":{"amount":"The amount of tokens lent.","data":"Arbitrary data structure, intended to contain user-defined parameters.","receiver":"The receiver of the tokens in the loan, and the receiver of the callback.","token":"The loan currency."}},"getToken(uint256)":{"details":"tokens[i] corresponds to the i-th asset and maps to index i in the internal LMSR arrays."},"initialMint(address,uint256)":{"details":"Assumes tokens have already been transferred to the pool prior to calling.      Can only be called when the pool is uninitialized (totalSupply() == 0 or _lmsr.nAssets == 0).","params":{"lpTokens":"The number of LP tokens to issue for this mint. If 0, then the number of tokens returned will equal the LMSR internal q total","receiver":"address that receives the LP tokens"}},"kappa()":{"details":"Pools are constructed with a κ value; this getter exposes the κ used by the pool."},"mint(address,address,uint256,uint256)":{"details":"- For initial supply: assumes tokens have already been transferred to the pool prior to calling.      - For subsequent mints: payer must approve the required token amounts before calling.      Rounds follow the pool-favorable conventions documented in helpers (ceil inputs, floor outputs).","params":{"deadline":"timestamp after which the transaction will revert. Pass 0 to ignore.","lpTokenAmount":"desired amount of LP tokens to mint (ignored for initial deposit)","payer":"address that provides the input tokens (ignored for initial deposit)","receiver":"address that receives the LP tokens"},"returns":{"lpMinted":"the actual amount of lpToken minted"}},"name()":{"details":"Returns the name of the token."},"protocolFeePpm()":{"details":"This is the fraction (in ppm) of the pool-collected fees that are owed to the protocol."},"swap(address,address,uint256,uint256,uint256,int128,uint256,bool)":{"details":"This function transfers the exact gross input (including fee) from payer and sends the computed output to receiver.      Non-standard tokens (fee-on-transfer, rebasers) are rejected via balance checks.","params":{"deadline":"timestamp after which the transaction will revert. Pass 0 to ignore.","inputTokenIndex":"index of input asset","limitPrice":"maximum acceptable marginal price (64.64 fixed point). Pass 0 to ignore.","maxAmountIn":"maximum amount of token inputTokenIndex (uint256) to transfer in (inclusive of fees)","outputTokenIndex":"index of output asset","payer":"address of the account that pays for the swap","receiver":"address that will receive the output tokens"},"returns":{"amountIn":"actual input used (uint256), amountOut actual output sent (uint256), fee fee taken from the input (uint256)"}},"swapAmounts(uint256,uint256,uint256,int128)":{"params":{"inputTokenIndex":"index of input token","limitPrice":"maximum acceptable marginal price (pass 0 to ignore)","maxAmountIn":"maximum gross input allowed (inclusive of fee)","outputTokenIndex":"index of output token"},"returns":{"amountIn":"gross input amount to transfer (includes fee), amountOut output amount user would receive, fee fee amount taken"}},"swapMint(address,address,uint256,uint256,uint256)":{"details":"swapMint executes as an exact-in planned swap followed by proportional scaling of qInternal.      The function emits SwapMint (gross, net, fee) and also emits Mint for LP issuance.","params":{"deadline":"optional deadline","inputTokenIndex":"index of the input token","maxAmountIn":"maximum uint token input (inclusive of fee)","payer":"who transfers the input token","receiver":"who receives the minted LP tokens"},"returns":{"lpMinted":"actual LP minted (uint)"}},"swapToLimit(address,address,uint256,uint256,int128,uint256,bool)":{"details":"If balances prevent fully reaching the limit, the function caps and returns actuals.      The payer must transfer the exact gross input computed by the view.","params":{"deadline":"timestamp after which the transaction will revert. Pass 0 to ignore.","inputTokenIndex":"index of input asset","limitPrice":"target marginal price to reach (must be > 0)","outputTokenIndex":"index of output asset","payer":"address of the account that pays for the swap","receiver":"address that will receive the output tokens"},"returns":{"amountInUsed":"actual input used excluding fee (uint256), amountOut actual output sent (uint256), fee fee taken from the input (uint256)"}},"symbol()":{"details":"Returns the symbol of the token."},"totalSupply()":{"details":"Returns the value of tokens in existence."},"transfer(address,uint256)":{"details":"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."},"transferFrom(address,address,uint256)":{"details":"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."}},"version":1},"userdoc":{"kind":"user","methods":{"allProtocolFeesOwed()":{"notice":"Protocol fee ledger accessor. Returns tokens owed (raw uint token units) from this pool as protocol fees         that have not yet been transferred out."},"allTokens()":{"notice":"Returns the list of all token addresses in the pool (copy)."},"burn(address,address,uint256,uint256,bool)":{"notice":"Burn LP tokens and withdraw the proportional basket to receiver."},"burnSwap(address,address,uint256,uint256,uint256,bool)":{"notice":"Burn LP tokens then swap the redeemed proportional basket into a single asset `inputTokenIndex` and send to receiver."},"collectProtocolFees()":{"notice":"Callable by anyone, sends any owed protocol fees to the protocol fee address."},"denominators()":{"notice":"Per-token uint base denominators used to convert uint token amounts <-> internal Q64.64 representation."},"flashFeePpm()":{"notice":"Flash-loan fee in parts-per-million (ppm) applied to flash borrow amounts."},"getToken(uint256)":{"notice":"Token addresses comprising the pool. Effectively immutable after construction."},"initialMint(address,uint256)":{"notice":"Initial mint to set up pool for the first time."},"kappa()":{"notice":"Liquidity parameter κ (Q64.64) used by the LMSR kernel: b = κ * S(q)"},"kill()":{"notice":"If a security problem is found, the vault owner may call this function to permanently disable swap and mint functionality, leaving only burns (withdrawals) working."},"mint(address,address,uint256,uint256)":{"notice":"Proportional mint (or initial supply if first call)."},"numTokens()":{"notice":"Returns the number of tokens (n) in the pool."},"protocolFeeAddress()":{"notice":"Address that will receive collected protocol tokens when collectProtocolFees() is called."},"protocolFeePpm()":{"notice":"Protocol fee share (ppm) applied to fees collected by the pool (floored when accrued)"},"swap(address,address,uint256,uint256,uint256,int128,uint256,bool)":{"notice":"Swap input token inputTokenIndex -> token outputTokenIndex. Payer must approve token inputTokenIndex."},"swapAmounts(uint256,uint256,uint256,int128)":{"notice":"External view to quote exact-in swap amounts (gross input incl. fee and output), matching swap() computations"},"swapFeePpm()":{"notice":"Per-swap fee in parts-per-million (ppm). Fee is taken from input amounts before LMSR computations."},"swapMint(address,address,uint256,uint256,uint256)":{"notice":"Single-token mint: deposit a single token, charge swap-LMSR cost, and mint LP."},"swapToLimit(address,address,uint256,uint256,int128,uint256,bool)":{"notice":"Swap up to the price limit; computes max input to reach limit then performs swap."},"wrapperToken()":{"notice":"Token contract used for wrapping native currency"}},"version":1}},"settings":{"remappings":["@abdk/=lib/abdk-libraries-solidity/","@openzeppelin/=lib/openzeppelin-contracts/","abdk-libraries-solidity/=lib/abdk-libraries-solidity/","erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/","forge-std/=lib/forge-std/src/","halmos-cheatcodes/=lib/openzeppelin-contracts/lib/halmos-cheatcodes/src/","openzeppelin-contracts/=lib/openzeppelin-contracts/"],"optimizer":{"enabled":true,"runs":100000000},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"src/IPartyPool.sol":"IPartyPool"},"evmVersion":"prague","libraries":{},"viaIR":true},"sources":{"lib/abdk-libraries-solidity/ABDKMath64x64.sol":{"keccak256":"0x1364fdc24192b982f647c7fc68dcb2f6fc1b5e201843e773144bd23a76cb3b97","urls":["bzz-raw://490712cc07db32f274899b17aade9c975f06010848c21500b8a5ead6898e09c7","dweb:/ipfs/QmZMPKjDgwCFSGdLWJW6g5E7hDLByA9hNjXzAwJ4GKTZvN"],"license":"BSD-4-Clause"},"lib/openzeppelin-contracts/contracts/interfaces/IERC3156FlashBorrower.sol":{"keccak256":"0x4e4b982b56b50290dd1dcaa2fef1178b1574dfc7c0f0a8ef9cb68a207d72582e","urls":["bzz-raw://eb7adc69bcb4d8ef0b001869b24e831edd411b6c5405e03c5e95ca109a7b7bcd","dweb:/ipfs/QmWeXYWVPUuwVWPjLXn44PrEnv7bJg3JiVkFm7riDkgTVk"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol":{"keccak256":"0x74ed01eb66b923d0d0cfe3be84604ac04b76482a55f9dd655e1ef4d367f95bc2","urls":["bzz-raw://5282825a626cfe924e504274b864a652b0023591fa66f06a067b25b51ba9b303","dweb:/ipfs/QmeCfPykghhMc81VJTrHTC7sF6CRvaA1FXVq2pJhwYp1dV"],"license":"MIT"},"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol":{"keccak256":"0xd6fa4088198f04eef10c5bce8a2f4d60554b7ec4b987f684393c01bf79b94d9f","urls":["bzz-raw://f95ee0bbd4dd3ac730d066ba3e785ded4565e890dbec2fa7d3b9fe3bad9d0d6e","dweb:/ipfs/QmSLr6bHkPFWT7ntj34jmwfyskpwo97T9jZUrk5sz3sdtR"],"license":"MIT"},"src/IOwnable.sol":{"keccak256":"0x7462267790c0d2312be1cbce077e5565aa86dac0789718c87ad0948174ecb990","urls":["bzz-raw://7eca10ffa6a7985d11eb476a351b1c09701056b0bdf8146612173bb19764e3f1","dweb:/ipfs/QmTPF85yFSL3jDt2atZDLT4RV3zs8ch8P3G7YzCUiU8gR9"],"license":"MIT"},"src/IPartyPool.sol":{"keccak256":"0xc10e413b1fcbf0ff75fe49d1a9c5263e321c4ccb72bc3bbc9daff2d8b7570d10","urls":["bzz-raw://1ca7470c68d7a92f64ada00053b8a097f9240e6abc3209796dbc1ab0bf47f7aa","dweb:/ipfs/Qmf3gXCVHPyQ9dQvdSQLVV3Yr476n4QJBa327oFwDV7mnE"],"license":"UNLICENSED"},"src/LMSRStabilized.sol":{"keccak256":"0xfbb5d611a105095a9ccc71f859908eec12ed7df4573a787e130bbaf9fbaa7935","urls":["bzz-raw://4f37e539fdbedd38488f5c5f0c8a4f579693e8de1ca546b60c580d4d0e12b28b","dweb:/ipfs/QmR6VvQs54XKH67DyWrWdLBf2n6XTYnTjRniY4CFihZAVN"],"license":"UNLICENSED"},"src/NativeWrapper.sol":{"keccak256":"0xca6c8828bbc6e45737dd881d9bcc4077bc058ddcc118189ed49b4ee331ab5579","urls":["bzz-raw://ddb1604ad481e4c58d0f216c8b262515cb735c03fd93a5b36c4e69c81df5a238","dweb:/ipfs/QmPhSjWsZksacUW8hR7tXNVRScoMSv6TQArbJBHcXJiRVB"],"license":"UNLICENSED"}},"version":1},"id":40}